// Generated by CoffeeScript 1.6.3
define(function(require) {
  var ChamberBox, Emitter, ParticleSystem, Vector2, canvas, emitter, emitterCtl, gui, midX, midY, ps, psCtl, stats;
  Vector2 = require('core/Vector2');
  Emitter = require('core/Emitter');
  ChamberBox = require('extend/ChamberBox');
  ParticleSystem = require('core/ParticleSystem');
  stats = require('lib/stats');
  require('lib/requestAnimationFrame');
  require('/bower_components/dat.gui/dat.gui.min.js');
  canvas = document.getElementById('main');
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  window.onresize = function() {
    canvas.width = window.innerWidth;
    return canvas.height = window.innerHeight;
  };
  canvas.onmousemove = function(e) {
    if (e.layerX || e.layerX === 0) {
      e.target.style.position = 'relative';
      return window.newMousePosition = new Vector2(e.layerX, e.layerY);
    } else {
      return window.newMousePosition = new Vector2(e.offsetX, e.offsetY);
    }
  };
  midX = canvas.width / 2;
  midY = canvas.height / 2;
  ps = new ParticleSystem(canvas);
  emitter = new Emitter({
    pos: new Vector2(midX, midY),
    velocity: new Vector2(-20, 0),
    spread: Math.PI
  });
  ps.addEmitter(emitter);
  ps.addEffector(new ChamberBox(0, 0, canvas.width, canvas.height));
  gui = new dat.GUI();
  emitterCtl = gui.addFolder('Emitter');
  psCtl = gui.addFolder('Particle system');
  emitterCtl.add(emitter, 'emissionRate', 1, 30);
  emitterCtl.add(emitter, 'applyMouse').listen();
  emitterCtl.add(emitter, 'reset');
  psCtl.add(ps, 'maxParticles', 0, 1000);
  psCtl.add(ps, 'gravityOn');
  psCtl.add(ps, 'effectorsOn');
  psCtl.add(ps, 'blurOn');
  (function() {
    stats.begin();
    ps.run();
    requestAnimationFrame(arguments.callee);
    return stats.end();
  })();
  return window.ps = ps;
});
