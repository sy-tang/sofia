// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var Color, Emitter, SmokeEmitter, SmokeParticle, Vector2, _ref;
  Vector2 = require('../../core/Vector2');
  Emitter = require('../../core/Emitter');
  Color = require('../../core/Color');
  SmokeParticle = require('./SmokeParticle');
  return SmokeEmitter = (function(_super) {
    __extends(SmokeEmitter, _super);

    function SmokeEmitter() {
      _ref = SmokeEmitter.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    SmokeEmitter.prototype.emitParticle = function() {
      var angle, opt;
      angle = this.velocity.angle() + this.spread - (Math.random() * this.spread * 2);
      opt = {
        pos: new Vector2(Math.random() * window.innerWidth, Math.random() * window.innerHeight),
        velocity: Vector2.fromAngle(angle, this.velocity.length()),
        life: this.minLife + Math.random() * (this.maxLife - this.minLife),
        size: this.minSize + Math.random() * (this.maxSize - this.minSize)
      };
      return new SmokeParticle(opt);
    };

    return SmokeEmitter;

  })(Emitter);
});
